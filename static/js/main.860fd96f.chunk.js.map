{"version":3,"sources":["components/CustomStyled.js","components/NavBar.js","services/helper.js","components/CharacterSummary.js","components/CharacterForm.js","services/dungeonService.js","components/PartyChip.js","containers/OwnerView.js","components/Profile.js","components/Stats.js","components/Skills.js","components/Weapons.js","components/Inventory.js","components/SpellDetail.js","components/SpellPage.js","containers/SpellBook.js","components/CharacterAdmin.js","components/DeathSavingThrows.js","containers/CharacterSheet.js","containers/PartyView.js","App.js","serviceWorker.js","index.js"],"names":["ActionBar","styled","span","_templateObject","BasicBox","div","_templateObject2","BottomAnchor","_templateObject3","Card","_templateObject4","Column","_templateObject5","ContentWithSideBar","_templateObject6","FooterBar","_templateObject7","HeaderBar","_templateObject8","ProgressContainer","_templateObject9","Row","_templateObject10","RowCenter","_templateObject11","Spacer","_templateObject12","SideBar","_templateObject13","SideBarToggle","_templateObject14","TopAnchor","_templateObject15","NavBar","_ref","user","react_default","a","createElement","AppBar","position","Toolbar","react_router_dom","to","IconButton","Avatar","alt","name","src","photo","calculateModifier","x","z","y","Math","floor","concat","isRangeWeapon","item","type","toLowerCase","skillsArray","label","check","CharacterSummary","character","save","add","linkTo","open","highlight","style","background","info","race","class","className","onClick","InfoRow","TextField","variant","disabled","value","level","hp","initiative","Perception","parseInt","stats","wis","owner","defaultProps","CharacterSummary_templateObject","p","CharacterSummary_templateObject2","CharacterForm","races","classes","_useState","useState","_useState2","Object","slicedToArray","values","setValues","handleValueChange","field","numeric","e","objectSpread","defineProperty","target","toggleSKill","arr","proSkills","i","findIndex","skill","toConsumableArray","slice","_addCharacter","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","this","arguments","CharacterForm_InfoRow","onChange","FormControl","minWidth","FormLabel","htmlFor","Select","find","r","speed","input","OutlinedInput","id","map","val","MenuItem","key","Divider","SkillSelect","_ref2","FormControlLabel","control","Checkbox","checked","indexOf","color","CharacterForm_templateObject","CharacterForm_templateObject2","serverDomain","process","getWelcome","result","fetch","sent","abrupt","text","getCharacter","_callee2","characterId","_args2","_context2","length","undefined","json","checkUserAuth","_ref3","_callee3","_context3","_x","_x2","dungeonService","saveCharacter","_ref4","_callee4","_context4","method","body","JSON","stringify","headers","Content-Type","t0","console","error","_x3","watchCharacters","characterIds","WebSocket","join","getCharactersByOwner","_ref5","_callee5","_context5","getLevelInfo","_ref6","_callee6","xp","_context6","_x4","getRaces","_ref7","_callee7","_context7","getClasses","_ref8","_callee8","_context8","getClass","_ref9","_callee9","_context9","_x5","getRace","_ref10","_callee10","_context10","_x6","getWeapons","_ref11","_callee11","_context11","getSpells","_ref12","_callee12","slugs","_context12","_x7","getSpellsForLevel","_ref13","_callee13","_context13","_x8","getFeats","_ref14","_callee14","ids","query","_context14","_x9","PartyChip","members","display","setDisplay","Chip","margin","component","href","clickable","localStorage","setItem","onDelete","preventDefault","parties","parse","getItem","index","savedParty","splice","OwnerView","characters","updateCharacters","_useState3","_useState4","updateParties","_useState5","_useState6","setClasses","_useState7","_useState8","setRaces","_useState9","_useState10","party","updateParty","_useState11","_useState12","isAdding","setAdding","_useState13","_useState14","loading","setLoading","_getCharactersByOwner","characterList","DungeonService","toggleCharacter","_loadBackgroundOptions","raceList","classList","data","useEffect","_getCharacters","storedParties","loadBackgroundOptions","ownCharacters","filter","components_CharacterSummary","otherCharacters","ownerParties","components_PartyChip","CircularProgress","justifySelf","Fab","size","Grid","components_CharacterForm","Fragment","removeItem","zIndex","OwnerView_templateObject","Profile","hitDice","update","editing","onValueChange","object","isNumeric","valueField","array","remove","alignItems","justifyContent","Badge","badgeContent","proBonus","maxHP","helperText","dex","marginTop","languages","lang","newLang","Info","proTools","tool","newTool","Profile_templateObject","Stats","saves","updatedInfo","getSaveBonus","StatGrid","str","con","int","cha","Stats_templateObject","Skills","skillDisplay","setQuery","lowerQuery","list","marginBottom","proSkill","s","proCheck","Weapons","proWeapons","weaponList","weaponIDs","isEditing","setEditing","ownedWeapons","setOwnedWeapons","isAddingUnique","setAddingUnique","weaponOptions","setWeaponOptions","selectedWeapon","setWeaponSelect","weaponCategories","setWeaponCategories","_useState15","_useState16","damageTypes","setDamageTypes","_useState17","category","damage_dice","damage_type","properties","_useState18","uniqueWeapon","setUniqueWeapon","_loadWeaponOptions","weapons","uniqueCategories","uniqueDamageTypes","Set","forEach","weapon","damageType","trim","handleUniqueSelect","event","oldWeapon","loadWeaponOptions","w","InputContainer","InputLabel","width","inputProps","placeholder","Button","dexCheck","proMod","proWeaponDesc","desc","split","isProWeapon","atkMod","rangeAtk","dmgMod","rangeDmg","removedWeaponList","damage","Weapons_templateObject","Inventory","itemList","gold","itemValues","setItemValues","goldValue","setGold","showDesc","setDescVisible","handleChange","updateQty","qty","maxWidth","goldCost","description","newGold","log","toggleDesc","SpellDetail","spell","icon","school","casting_time","duration","range","SpellPage","ability","spells","slots","addSpell","forgetSpell","mod","spellList","setSpellList","openSlots","setOpenSlots","spellSearchResult","setSearchResults","showResults","setShow","_getNewSpells","results","known","slug","slotArr","push","spellLookupButton","getNewSpells","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","components_SpellDetail","ExpansionPanelActions","SpellBook","classInfo","spellDetails","setSpellDetails","removeSpell","cantrips","components_SpellPage","spellcasting_ability","spellContainers","Level","_loadSpells","loadSpells","CharacterAdmin","authUsers","authEmail","DeathSavingThrows","success1","success2","success3","failure1","failure2","failure3","setChecked","updatedChecks","SavingThrowsContainer","GreenCheckbox","aria-label","RedCheckbox","DeathSavingThrows_templateObject","withStyles","root","&$checked","green","props","assign","red","CharacterSheet","characterData","characterBase","updateCharacterBase","updateCharacter","isDirty","setDirty","editMode","setEditMode","authorized","setAuthorized","setClassInfo","charUpdates","obj1","obj2","_save","cancel","_getClassInfo","getClassInfo","SheetContainer","SaveBar","marginRight","Admin","components_CharacterAdmin","ProfileArea","components_Profile","components_DeathSavingThrows","StatsArea","components_Stats","prof_saving_throws","SkillsArea","components_Skills","WeaponsArea","components_Weapons","proWeapon","EquipmentArea","components_Inventory","inventory","Misc","containers_SpellBook","substring","CharacterSheet_templateObject","CharacterSheet_templateObject2","CharacterSheet_templateObject3","CharacterSheet_templateObject4","CharacterSheet_templateObject5","CharacterSheet_templateObject6","CharacterSheet_templateObject7","CharacterSheet_templateObject8","CharacterSheet_templateObject9","PartyView","location","sidebar","setSidebar","idList","setIDList","setCharacters","focus","setFocus","partyName","setPartyName","existingParty","setExistingParty","_saveParty","search","selected","_fetchCharactersByOwner","owned","fetchCharactersByOwner","c","Content","containers_CharacterSheet","Card_Card","PartyActions","email","firebase","auth","currentUser","SideContainer","PartyView_templateObject","PartyView_templateObject2","PartyView_templateObject3","App","updateUser","login","_login","provider","GoogleAuthProvider","signInWithPopup","displayName","photoURL","onAuthStateChanged","unregister","token","getIdToken","fetchIntercept","register","request","url","config","Authorization","components_NavBar","App_Content","react_router","path","exact","containers_OwnerView","containers_PartyView","App_templateObject","Boolean","window","hostname","match","firebaseConfig","require","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration"],"mappings":"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","file":"static/js/main.860fd96f.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ActionBar = styled.span`\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n`;\n\nexport const BasicBox = styled.div`\n  width: 4.6875em;\n  height: 4.6875em;\n  margin-left: 0.625em;\n  margin-bottom: 0.625em;\n`;\n\nexport const BottomAnchor = styled.span`\n  position: fixed;\n  bottom: 0.313em;\n  right: 0.313em;\n`;\n\nexport const Card = styled.div`\n  position: relative;\n  background: white;\n  box-shadow: lightgray 1px 1px 0.313em;\n  border-radius: 0.313em;\n  padding: 0.625em;\n  display: flex;\n  flex-direction: column;\n  margin: 0.313em;\n`;\n\nexport const Column = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContentWithSideBar = styled.div`\n  flex: 1;\n  display: grid;\n  grid-template-columns: 1fr 25em;\n  @media screen and (max-width: 62.5em) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const FooterBar = styled.div`\ndisplay: flex;\n  align-items: center;\n  border-top: lightgray solid 1px;\n  margin-top: 0.8em;\n  & h1,\n  h2,\n  h3,\n  h4,\n  p {\n    margin: 0.3em 0em;\n  }\n  & p {\n    font-size: 0.7em;\n  }\n`;\n\nexport const HeaderBar = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: lightgray solid 1px;\n  margin-bottom: 1em;\n  & h1,\n  h2,\n  h3,\n  h4,\n  p {\n    margin: 0em;\n  }\n  & p {\n    font-size: 0.8em;\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin: 25%;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: .5rem;\n  align-items: center;\n`;\n\nexport const RowCenter = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Spacer = styled.span`\n  flex: 1;\n`;\n\nexport const SideBar = styled.div`\n  position: fixed;\n  width: 22em;\n  height: 100vh;\n  top: 4em;\n  padding: 0em 1em;\n  right: 0em;\n  overflow-y: scroll;\n  z-index: 1100;\n\n  @media screen and (max-width: 62.5em) {\n    background-color: white;\n    box-shadow: lightgrey 1px 1px 0.313em;\n    top: 0em;\n    right: -25em;\n    transition: right 0.3s ease;\n\n    &.open {\n      right: 0em;\n    }\n  }\n`;\n\nexport const SideBarToggle = styled.div`\n  position: fixed;\n  bottom: 0.313em;\n  right: 0.313em;\n  display: none;\n  z-index: 1101;\n\n  @media screen and (max-width: 62.5em) {\n    display: initial;\n  }\n`;\n\nexport const TopAnchor = styled.span`\n  position: absolute;\n  top: -0.8em;\n  left: 0em;\n  z-index: 100;\n`;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Link } from \"react-router-dom\";\n\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { Spacer } from \"./CustomStyled\";\n\nfunction NavBar({ user }) {\n  return (\n    <AppBar position='fixed'>\n      <Toolbar>\n        <Link to='/'>\n          <h3>Dungeon</h3>\n        </Link>\n        <Spacer />\n        {user && (\n          <IconButton>\n            <Avatar alt={user.name} src={user.photo} />\n          </IconButton>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\nexport default NavBar;\n","\nexport function calculateModifier(x, z) {\n  let y = Math.floor((x - 10) / 2);\n  y = z ? y + z : y;\n  return y < 0 ? `${y}` : `+${y}`;\n}\n\nexport function dexAttack(item) {\n  if (item.weapon.category.toLowerCase().indexOf('range') !== -1) return true;\n  if (!item.weapon) return false;\n  // TODO: reenable this once i know how\n  // const finesse = weapon.weapon.find((prop) => {\n  //   const text = prop.toLowerCase();\n  //   return text.indexOf('finesse') !== -1;\n  // });\n  // return !!finesse;\n}\n\nexport function isRangeWeapon(item) {\n  if (item.type.toLowerCase() === 'ranged weapon') return true;\n  return false;\n}\n\nexport function isProWeapon(item, proWeaponDesc) {\n  if (!proWeaponDesc) return false;\n  const result = proWeaponDesc.find(desc => desc.indexOf(item.name.toLowerCase()));\n  if (result) return true;\n  const categoryArr = item.weapon.category.split(' ').map(str => str.toLowerCase());\n  return !!categoryArr.find(category => !!proWeaponDesc.find(desc => desc.indexOf(category)));\n}\n\nexport function same(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n}\n\nexport const skillsArray = [\n  {\n    label: 'Acrobatics',\n    check: 'dex',\n  },\n  {\n    label: 'Animal Handling',\n    check: 'wis',\n  },\n  {\n    label: 'Arcana',\n    check: 'int',\n  },\n  {\n    label: 'Athletics',\n    check: 'str',\n  },\n  {\n    label: 'Deception',\n    check: 'cha',\n  },\n  {\n    label: 'History',\n    check: 'int',\n  },\n  {\n    label: 'Insight',\n    check: 'wis',\n  },\n  {\n    label: 'Intimidation',\n    check: 'cha',\n  },\n  {\n    label: 'Investigation',\n    check: 'int',\n  },\n  {\n    label: 'Medicine',\n    check: 'wis',\n  },\n  {\n    label: 'Nature',\n    check: 'int',\n  },\n  {\n    label: 'Perception',\n    check: 'wis',\n  },\n  {\n    label: 'Performance',\n    check: 'cha',\n  },\n  {\n    label: 'Persuasion',\n    check: 'cha',\n  },\n  {\n    label: 'Religion',\n    check: 'int',\n  },\n  {\n    label: 'Sleight of Hand',\n    check: 'dex',\n  },\n  {\n    label: 'Stealth',\n    check: 'dex',\n  },\n  {\n    label: 'Survival',\n    check: 'wis',\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {\n  Card, HeaderBar, Spacer, ActionBar, Column, FooterBar,\n} from './CustomStyled';\nimport { calculateModifier } from '../services/helper';\n\n\nfunction CharacterSummary({\n  character, save, add, linkTo, open, highlight,\n}) {\n  return (\n    <Card style={ highlight ? { background: 'lightblue' } : {} }>\n      <HeaderBar>\n        <Column>\n          <b>{ character.info.name }</b>\n          <p>{ character.race.name } { character.class.name }</p>\n        </Column>\n        <Spacer />\n        <ActionBar>\n          { linkTo\n            && <Link to={ linkTo }>\n              <IconButton>\n                <i className=\"material-icons\">fullscreen</i>\n              </IconButton>\n            </Link>\n          }\n          { open\n            && <IconButton onClick={ open }>\n              <i className=\"material-icons\">fullscreen</i>\n            </IconButton>\n          }\n          { add\n            && <IconButton onClick={ add }>\n              <i className=\"material-icons\">group_add</i>\n            </IconButton>\n          }\n          { save\n            && <IconButton onClick={ save }>\n              <i className=\"material-icons\">save</i>\n            </IconButton>\n          }\n        </ActionBar>\n      </HeaderBar>\n      <InfoRow>\n        <TextField variant=\"outlined\" disabled type=\"number\" label=\"Level\" value={ character.level.level } />\n        <TextField variant=\"outlined\" disabled type=\"number\" label=\"Hit Points\" value={ character.info.hp } />\n        <TextField variant=\"outlined\" disabled type=\"number\" label=\"Initiative\" value={ character.info.initiative || '' } />\n      </InfoRow>\n      <Perception>Passive Perception: { 10 + parseInt(calculateModifier(character.info.stats.wis)) }</Perception>\n      <FooterBar>\n        <p>Created by <b>{ character.info.owner }</b></p>\n      </FooterBar>\n    </Card>\n  );\n}\n\nexport default CharacterSummary;\n\nCharacterSummary.propTypes = {\n  character: PropTypes.object.isRequired,\n  save: PropTypes.func,\n  add: PropTypes.func,\n  open: PropTypes.func,\n  linkTo: PropTypes.string,\n  highlight: PropTypes.bool,\n};\n\nCharacterSummary.defaultProps = {\n  save: null,\n  add: null,\n  linkTo: null,\n  open: null,\n  highlight: false,\n};\n\nconst InfoRow = styled.div`\n      display: flex;\n      margin-top: .62em;\n    `;\n\nconst Perception = styled.p`\n      font-size: 12px;\n      font-style: italic;\n    `;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  IconButton,\n  FormControl,\n  FormLabel,\n  Select,\n  MenuItem,\n  Divider,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  OutlinedInput,\n} from '@material-ui/core';\nimport {\n  Card, Spacer, HeaderBar, ActionBar, BasicBox,\n} from './CustomStyled';\nimport { skillsArray } from '../services/helper';\n\nconst CharacterForm = ({ races, classes, save }) => {\n  const [values, setValues] = useState({});\n\n  function handleValueChange(field, numeric) {\n    return e =>\n      setValues({\n        ...values,\n        [field]: numeric ? +e.target.value : e.target.value,\n      });\n  }\n\n  function raceSelect(e) {\n    const race = races.find(r => r.name === e.target.value);\n    setValues({ ...values, race: race.name, speed: race.speed });\n  }\n\n  function toggleSKill(e) {\n    const arr = values.proSkills || [];\n    const i = arr.findIndex(skill => skill === e.target.value);\n    if (i === -1) setValues({ ...values, proSkills: [...arr, e.target.value] });\n    else {\n      setValues({\n        ...values,\n        proSkills: [...arr.slice(0, i), ...arr.slice(i + 1)],\n      });\n    }\n  }\n\n  async function addCharacter() {\n    setValues({});\n    save(values);\n  }\n\n  return (\n    <Card>\n      <HeaderBar>\n        <h4>New Character</h4>\n        <Spacer />\n        <ActionBar>\n          <IconButton onClick={addCharacter}>\n            <i className=\"material-icons\">done</i>\n          </IconButton>\n        </ActionBar>\n      </HeaderBar>\n      <InfoRow>\n        <TextField\n          variant=\"outlined\"\n          label=\"Name\"\n          onChange={handleValueChange('name')}\n        />\n        <BasicBox>\n          <TextField\n            variant=\"outlined\"\n            label=\"HP\"\n            type=\"number\"\n            onChange={handleValueChange('maxHP', true)}\n          />\n        </BasicBox>\n      </InfoRow>\n      <InfoRow>\n        <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\n          <FormLabel htmlFor=\"race\">Race</FormLabel>\n          <Select\n            value={values.race || ''}\n            onChange={raceSelect}\n            input={<OutlinedInput id=\"race\" />}\n          >\n            {races.map(val => (\n              <MenuItem key={val.name} value={val.name}>\n                {val.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <Spacer />\n        <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\n          <FormLabel htmlFor=\"class\">Class</FormLabel>\n          <Select\n            value={values.class || ''}\n            onChange={handleValueChange('class')}\n            input={<OutlinedInput id=\"class\" />}\n          >\n            {classes.map(val => (\n              <MenuItem key={val.name} value={val.name}>\n                {val.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </InfoRow>\n      <Divider />\n      <HeaderBar>\n        <p>\n          <strong>Proficient Skills</strong>\n        </p>\n      </HeaderBar>\n      <SkillSelect>\n        {skillsArray.map(({ label }) => (\n          <FormControlLabel\n            key={label}\n            control={\n              <Checkbox\n                checked={\n                  (values.proSkills\n                    && values.proSkills.indexOf(label) !== -1)\n                  || false\n                }\n                value={label}\n                onChange={toggleSKill}\n                color=\"primary\"\n              />\n            }\n            label={label}\n          />\n        ))}\n      </SkillSelect>\n    </Card>\n  );\n};\n\nexport default CharacterForm;\n\nCharacterForm.propTypes = {\n  save: PropTypes.func.isRequired,\n  races: PropTypes.array.isRequired,\n  classes: PropTypes.array.isRequired,\n};\n\nconst InfoRow = styled.div`\n  display: flex;\n  margin-top: 0.62em;\n`;\n\nconst SkillSelect = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 150px);\n  grid-gap: 10px;\n  margin: 10px 0px;\n  justify-content: center;\n`;\n","const serverDomain = process.env.REACT_APP_API_DOMAIN || 'http://localhost:80';\n\nconst getWelcome = async () => {\n  const result = await fetch(`${serverDomain}/api`);\n  return result.text();\n};\n\nconst getCharacter = async (characterId = '') => {\n  const result = await fetch(`${serverDomain}/api/data/pc/${characterId}?detail=true`);\n  return result.json();\n};\n\nconst checkUserAuth = async (characterId, user) => {\n  const result = await fetch(`${serverDomain}/api/characters/${characterId}/auth-users?user=${user}`);\n  return result.json();\n};\n\nconst saveCharacter = async (character) => {\n  try {\n    await fetch(`${serverDomain}/api/data/pc`,\n      {\n        method: 'POST',\n        body: JSON.stringify(character.info),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n  } catch (err) {\n    console.error(err);\n    return false;\n  }\n  return true;\n};\n\nconst watchCharacters = characterIds => new WebSocket(`ws://${serverDomain}/api/characters?id=${characterIds.join()}&watch=true`);\n\nconst getCharactersByOwner = async () => {\n  const result = await fetch(`${serverDomain}/api/data/pc?detail=true`);\n  return result.json();\n};\n\nconst getLevelInfo = async (xp) => {\n  const result = await fetch(`${serverDomain}/api/level?xp=${xp}`);\n  return result.json();\n};\n\nconst getRaces = async () => {\n  const result = await fetch(`${serverDomain}/api/races`);\n  return result.json();\n};\n\nconst getClasses = async () => {\n  const result = await fetch(`${serverDomain}/api/classes`);\n  return result.json();\n};\n\nconst getClass = async (id) => {\n  const result = await fetch(`${serverDomain}/api/classes/${id}`);\n  return result.json();\n};\n\nconst getRace = async (id) => {\n  const result = await fetch(`${serverDomain}/api/races/${id}`);\n  return result.json();\n};\n\nconst getWeapons = async () => {\n  const result = await fetch(`${serverDomain}/api/items?type=weapon`);\n  return result.json();\n};\n\nconst getSpells = async (slugs) => {\n  const result = await fetch(`${serverDomain}/api/spells?name=${slugs.join()}`);\n  return result.json();\n};\n\nconst getSpellsForLevel = async (level) => {\n  const result = await fetch(`${serverDomain}/api/spells?level=${level}`);\n  return result.json();\n};\n\nconst getFeats = async (ids) => {\n  const query = !ids ? '' : `?id=${ids.join()}`;\n  const result = await fetch(`${serverDomain}/api/feats${query}`);\n  return result.json();\n};\n\nexport default {\n  getCharacter,\n  saveCharacter,\n  watchCharacters,\n  getCharactersByOwner,\n  getWelcome,\n  getLevelInfo,\n  checkUserAuth,\n  getRaces,\n  getClasses,\n  getClass,\n  getRace,\n  getWeapons,\n  getSpells,\n  getSpellsForLevel,\n  getFeats,\n};\n","import React, { useState } from 'react';\nimport { Chip } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nfunction PartyChip({ name, members }) {\n  const [display, setDisplay] = useState(true);\n\n  function removeParty(e) {\n    e.preventDefault();\n    const parties = JSON.parse(localStorage.getItem('parties'));\n    // Grab index of the existing party\n    const index = parties.findIndex(savedParty => savedParty.name === name);\n    if (index !== -1) {\n      parties.splice(index, 1);\n    }\n    localStorage.setItem('parties', JSON.stringify(parties));\n    setDisplay(false);\n  }\n  // localStorage doesn't trigger a rerender\n  if (display) {\n    return (\n          <Chip\n            label={name}\n            style={{ margin: '0.5rem' }}\n            variant=\"contained\"\n            component=\"a\"\n            color=\"secondary\"\n            href={`/character?id=${members.join()}`}\n            clickable\n            onClick={() => { localStorage.setItem('selected', name); }}\n            onDelete={removeParty}\n          />\n    );\n  }\n  return null;\n}\n\nPartyChip.propTypes = {\n  name: PropTypes.string.isRequired,\n  members: PropTypes.array.isRequired,\n};\n\nexport default PartyChip;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Fab, Divider, CircularProgress } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport CharacterSummary from '../components/CharacterSummary';\nimport CharacterForm from '../components/CharacterForm';\nimport DungeonService from '../services/dungeonService';\nimport {\n  BottomAnchor,\n  TopAnchor,\n  Column,\n  Row,\n  Card,\n  ProgressContainer,\n} from '../components/CustomStyled';\nimport PartyChip from '../components/PartyChip';\n\nfunction OwnerView({ owner }) {\n  const [characters, updateCharacters] = useState([]);\n  const [parties, updateParties] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [races, setRaces] = useState([]);\n  const [party, updateParty] = useState([]);\n  const [isAdding, setAdding] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  async function getCharactersByOwner() {\n    const characterList = await DungeonService.getCharactersByOwner(owner);\n    updateCharacters(characterList || []);\n  }\n\n  function toggleCharacter(id) {\n    const i = party.indexOf(id);\n    if (i !== -1) updateParty([...party.slice(0, i), ...party.slice(i + 1)]);\n    else updateParty([...party, id]);\n  }\n\n  async function loadBackgroundOptions() {\n    const raceList = await DungeonService.getRaces();\n    setRaces(raceList);\n    const classList = await DungeonService.getClasses();\n    setClasses(classList);\n  }\n\n  async function addCharacter(data) {\n    await DungeonService.saveCharacter({ ...data, owner });\n    setAdding(false);\n    getCharactersByOwner();\n  }\n\n  useEffect(() => {\n    (async function getCharacters() {\n      const characterList = await DungeonService.getCharactersByOwner(owner);\n      updateCharacters(characterList || []);\n      setLoading(false);\n    }());\n    const storedParties = JSON.parse(localStorage.getItem('parties'));\n    if (storedParties) {\n      updateParties(storedParties);\n    }\n  }, [owner]);\n\n  useEffect(() => {\n    if (!isAdding || races.length || classes.length) return;\n    loadBackgroundOptions();\n  }, [isAdding, classes.length, races.length]);\n\n  const ownCharacters = characters\n    .filter(character => character.owner === owner)\n    .map(character => (\n      <CharacterSummary\n        key={character.info.id}\n        character={character}\n        highlight={party.indexOf(character.info.id) !== -1}\n        add={() => toggleCharacter(character.info.id)}\n        linkTo={`/character?id=${character.info.id}`}\n      />\n    ));\n\n  const otherCharacters = characters\n    .filter(character => character.owner !== owner)\n    .map(character => (\n      <CharacterSummary\n        key={character.info.id}\n        character={character}\n        highlight={party.indexOf(character.info.id) !== -1}\n        add={() => toggleCharacter(character.info.id)}\n        linkTo={`/character?id=${character.info.id}`}\n      />\n    ));\n\n  const ownerParties = parties.map(savedParty => (\n        <PartyChip key={savedParty.name} name={savedParty.name} members={savedParty.members} />\n  ));\n\n  if (loading) {\n    return (\n      <ProgressContainer>\n        <CircularProgress style={{ justifySelf: 'center' }} />\n      </ProgressContainer>\n    );\n  }\n  return (\n    <Column>\n      <TopAnchor>\n        <Fab\n          size=\"small\"\n          color=\"secondary\"\n          onClick={() => setAdding(!isAdding)}\n        >\n          <i className=\"material-icons\">{ !isAdding ? 'add' : 'close' }</i>\n        </Fab>\n      </TopAnchor>\n      {!!ownerParties.length\n      && <Card>\n          <Row>\n            <h3>Parties: </h3>\n            {ownerParties}\n          </Row>\n         </Card>\n      }\n      <Grid>\n        { ownCharacters }\n        { isAdding && (\n          <CharacterForm races={races} classes={classes} save={addCharacter} />\n        ) }\n      </Grid>\n      { !!otherCharacters.length && (\n        <>\n          <Divider />\n          <Grid>{ otherCharacters }</Grid>\n        </>\n      ) }\n      { !!party.length && (\n        <BottomAnchor>\n          <Link onClick={() => { localStorage.removeItem('selected'); }} to={`/character?id=${party.join()}`} style={{ zIndex: 10 }}>\n            <Fab color=\"secondary\">\n              <i className=\"material-icons\">group</i>\n            </Fab>\n          </Link>\n        </BottomAnchor>\n      ) }\n    </Column>\n  );\n}\n\nexport default OwnerView;\n\nOwnerView.propTypes = {\n  owner: PropTypes.string.isRequired,\n};\n\nconst Grid = styled.div`\n  position: relative;\n  width: 100vw;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 22em);\n  grid-gap: 0.625em;\n  justify-content: center;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Badge, TextField, Chip, IconButton,\n} from '@material-ui/core';\nimport {\n  Card, Column, Row, BasicBox, Spacer, HeaderBar,\n} from './CustomStyled';\nimport { calculateModifier } from '../services/helper';\n\nconst Profile = ({\n  character, hitDice, update, disabled, editing,\n}) => {\n  const [values, setValues] = useState({});\n\n  function onValueChange(field) {\n    return e => setValues({ ...values, [field]: e.target.value });\n  }\n\n  // function onChange(field, numeric) {\n  //   return (e) => {\n  //     const val = numeric ? +e.target.value : e.target.value;\n  //     update({ ...character, [field]: val });\n  //   };\n  // }\n\n  function onChange(object, field, isNumeric) {\n    return (e) => {\n      const value = isNumeric ? +e.target.value : e.target.value;\n      update({ ...character, [object]: { ...character.info, [field]: value } });\n    };\n  }\n\n  function add(field, valueField) {\n    return () => {\n      const array = character.info[field] || [];\n      update({ ...character, info: { ...character.info, [field]: [...array, values[valueField]] } });\n      setValues({ ...values, [valueField]: '' });\n    };\n  }\n\n  function remove(field, i) {\n    return () => {\n      const array = [\n        ...character.info[field].slice(0, i),\n        ...character.info[field].slice(i + 1),\n      ];\n      update({ ...character, info: { ...character.info, [field]: array } });\n    };\n  }\n  // const { info, stats, race } = character;\n  return (\n    <Card>\n      <Row style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\n        <Column>\n          { !editing\n            ? <h2 style={{ margin: 0 }}>{ character.info.name }</h2>\n            : <TextField\n              label=\"Name\"\n              value={character.info.name}\n              onChange={onChange('info', 'name')}\n            />\n          }\n          <p style={{ margin: 0 }}>{ character.race.name } { character.class.name }</p>\n        </Column>\n        <Spacer />\n        <Badge badgeContent={`+${character.level.proBonus}`} color=\"secondary\">\n          <BasicBox>\n            { !editing\n              ? <TextField\n                variant=\"outlined\"\n                disabled\n                type=\"number\"\n                label=\"Level\"\n                value={character.level.level}\n              />\n              : <TextField\n                variant=\"outlined\"\n                type=\"number\"\n                label=\"XP\"\n                value={character.info.xp}\n                onChange={onChange('info', 'xp', true)}\n              />\n            }\n          </BasicBox>\n        </Badge>\n        <BasicBox>\n          { !editing\n            ? <TextField\n              variant=\"outlined\"\n              disabled={disabled}\n              type=\"number\"\n              label={`HP/${character.info.maxHP}`}\n              value={character.info.hp}\n              helperText={`${hitDice}`}\n              onChange={onChange('info', 'hp', true)}\n            />\n            : <TextField\n              variant=\"outlined\"\n              disabled={disabled}\n              type=\"number\"\n              label=\"Max HP\"\n              value={character.info.maxHP}\n              helperText={`${hitDice}`}\n              onChange={onChange('info', 'maxHP', true)}\n            />\n          }\n        </BasicBox>\n        <BasicBox>\n          <TextField\n            variant=\"outlined\"\n            disabled={!editing}\n            type=\"number\"\n            label=\"AC\"\n            value={0}\n            // onChange={onChange('armor', true)}\n          />\n        </BasicBox>\n        <BasicBox>\n          <TextField\n            variant=\"outlined\"\n            disabled={!editing}\n            type=\"number\"\n            label=\"Speed\"\n            value={character.race.speed}\n            // onChange={onChange('race', 'speed', true)}\n          />\n        </BasicBox>\n        <Badge badgeContent={calculateModifier(character.info.stats.dex)} color=\"secondary\">\n          <BasicBox>\n            <TextField\n              variant=\"outlined\"\n              disabled={disabled}\n              type=\"number\"\n              label=\"Init\"\n              value={character.info.initiative || ''}\n              onChange={onChange('info', 'initiative', true)}\n            />\n          </BasicBox>\n        </Badge>\n      </Row>\n      {/* LANGUAGES */ }\n      { editing && !disabled\n        // ADD NEW LANGUAGES\n        ? <>\n          <HeaderBar style={{ marginTop: '1em' }}>\n            Known Languages\n          </HeaderBar>\n          <Row>\n            { character.info.languages\n              && character.info.languages.map((lang, i) => (\n                <Chip\n                  key={`pro-${lang}`}\n                  label={lang}\n                  onDelete={editing && !disabled ? remove('languages', i) : null}\n                  color=\"primary\"\n                />\n              )) }\n\n            <TextField\n              label=\"New Language\"\n              value={values.newLang || ''}\n              onChange={onValueChange('newLang')}\n            />\n            <IconButton color=\"primary\" onClick={add('languages', 'newLang')}>\n              <i className=\"material-icons\">done</i>\n            </IconButton>\n          </Row>\n          </>\n        // DISPLAY LANGUAGES/TOOLS AND SAVING THROWS\n        : <Row style={{ justifyContent: 'space-between' }}>\n          <Column>\n            <Info><b>Known Languages:</b> { character.info.languages && character.info.languages.length ? character.info.languages.join() : <i>none</i> }</Info>\n            <Info><b>Tools Proficiencies:</b> { character.info.proTools && character.info.proTools.length ? character.info.proTools.join() : <i>none</i> }</Info>\n            <Info><b>Passive Perception:</b> {10 + parseInt(calculateModifier(character.info.stats.wis))} </Info>\n          </Column>\n          </Row>\n      }\n      {/* TOOLS */ }\n      { editing && !disabled\n        // ADD NEW TOOLS\n        && <>\n          <HeaderBar style={{ marginTop: '1em' }}>\n            Tool Proficiencies\n          </HeaderBar>\n          <Row>\n            { character.info.proTools\n              && character.info.proTools.map((tool, i) => (\n                <Chip\n                  key={`pro-${tool}`}\n                  label={tool}\n                  onDelete={editing && !disabled ? remove('proTools', i) : null}\n                  color=\"primary\"\n                />\n              )) }\n\n            <TextField\n              label=\"New Tool\"\n              value={values.newTool || ''}\n              onChange={onValueChange('newTool')}\n            />\n            <IconButton color=\"primary\" onClick={add('proTools', 'newTool')}>\n              <i className=\"material-icons\">done</i>\n            </IconButton>\n          </Row>\n           </>\n      }\n    </Card>\n  );\n};\n\nexport default Profile;\n\nProfile.propTypes = {\n  character: PropTypes.object.isRequired,\n  hitDice: PropTypes.string.isRequired,\n  update: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  editing: PropTypes.bool.isRequired,\n};\n\nconst Info = styled.p`\n  margin: 3px 0px;\n  font-size: .8em;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport PropTypes from 'prop-types';\nimport { Badge, TextField } from '@material-ui/core';\nimport { Card, HeaderBar } from './CustomStyled';\nimport { calculateModifier } from '../services/helper';\n\n\nfunction Stats({\n  character, saves, update, disabled,\n}) {\n  const { stats } = character.info;\n\n  function onChange(field) {\n    return (e) => {\n      const { info } = character;\n\n      const value = +e.target.value;\n      // to avoid a triple splat inside the update\n      const updatedInfo = { ...info, stats: { ...info.stats, [field]: value } };\n      update({ ...character, info: updatedInfo });\n    };\n  }\n\n  function getSaveBonus(field) {\n    return saves.toLowerCase().indexOf(field) === -1 ? 0 : character.level.proBonus;\n  }\n  return (\n    <Card>\n      <HeaderBar>\n        <h2>Stats</h2>\n      </HeaderBar>\n      <StatGrid>\n        <Badge badgeContent={!disabled ? calculateModifier(stats.str) : stats.str} color=\"secondary\">\n          <TextField\n            variant=\"outlined\"\n            disabled={disabled}\n            type={!disabled ? 'number' : 'mod'}\n            label=\"Strength\"\n            value={!disabled ? stats.str : calculateModifier(stats.str)}\n            onChange={onChange('str')}\n            helperText={`Save: ${calculateModifier(stats.str, getSaveBonus('str'))}`}\n          />\n        </Badge>\n        <Badge badgeContent={!disabled ? calculateModifier(stats.dex) : stats.dex} color=\"secondary\">\n          <TextField\n            variant=\"outlined\"\n            disabled={disabled}\n            type={!disabled ? 'number' : 'mod'}\n            label=\"Dexterity\"\n            value={!disabled ? stats.dex : calculateModifier(stats.dex)}\n            onChange={onChange('dex')}\n            helperText={`Save: ${calculateModifier(stats.dex, getSaveBonus('dex'))}`}\n          />\n        </Badge>\n        <Badge badgeContent={!disabled ? calculateModifier(stats.con) : stats.con} color=\"secondary\">\n          <TextField\n            variant=\"outlined\"\n            disabled={disabled}\n            type={!disabled ? 'number' : 'mod'}\n            label=\"Constitution\"\n            value={!disabled ? stats.con : calculateModifier(stats.con)}\n            onChange={onChange('con')}\n            helperText={`Save: ${calculateModifier(stats.con, getSaveBonus('con'))}`}\n          />\n        </Badge>\n        <Badge badgeContent={!disabled ? calculateModifier(stats.int) : stats.int} color=\"secondary\">\n          <TextField\n            variant=\"outlined\"\n            disabled={disabled}\n            type={!disabled ? 'number' : 'mod'}\n            label=\"Intelligence\"\n            value={!disabled ? stats.int : calculateModifier(stats.int)}\n            onChange={onChange('int')}\n            helperText={`Save: ${calculateModifier(stats.int, getSaveBonus('int'))}`}\n          />\n        </Badge>\n        <Badge badgeContent={!disabled ? calculateModifier(stats.wis) : stats.wis} color=\"secondary\">\n          <TextField\n            variant=\"outlined\"\n            disabled={disabled}\n            type={!disabled ? 'number' : 'mod'}\n            label=\"Wisdom\"\n            value={!disabled ? stats.wis : calculateModifier(stats.wis)}\n            onChange={onChange('wis')}\n            helperText={`Save: ${calculateModifier(stats.wis, getSaveBonus('wis'))}`}\n          />\n        </Badge>\n        <Badge badgeContent={!disabled ? calculateModifier(stats.cha) : stats.cha} color=\"secondary\">\n          <TextField\n            variant=\"outlined\"\n            disabled={disabled}\n            type={!disabled ? 'number' : 'mod'}\n            label=\"Charisma\"\n            value={!disabled ? stats.cha : calculateModifier(stats.cha)}\n            onChange={onChange('cha')}\n            helperText={`Save: ${calculateModifier(stats.cha, getSaveBonus('cha'))}`}\n          />\n        </Badge>\n      </StatGrid>\n    </Card>\n  );\n}\n\nexport default Stats;\n\nStats.propTypes = {\n  character: PropTypes.shape({\n    dex: PropTypes.number,\n    int: PropTypes.number,\n    str: PropTypes.number,\n  }).isRequired,\n  saves: PropTypes.string.isRequired,\n  update: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n\nconst StatGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  grid-gap: .625em;\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Divider, TextField, FormControlLabel, Checkbox,\n} from '@material-ui/core';\nimport {\n  Row, Spacer, Card, HeaderBar, ActionBar,\n} from './CustomStyled';\nimport { calculateModifier, skillsArray } from '../services/helper';\n\nconst Skills = ({ character, editing, update }) => {\n  const [skillDisplay, setDisplay] = useState(skillsArray);\n  const [query, setQuery] = useState('');\n\n  function proCheck(proSkills, skill) {\n    return !proSkills ? false : proSkills.findIndex(s => s === skill) !== -1;\n  }\n\n  function toggleSKill(e) {\n    const arr = character.info.proSkills || [];\n    const i = arr.findIndex(skill => skill === e.target.value);\n    if (i === -1) update({ ...character, info: { ...character.info, proSkills: [...arr, e.target.value] } });\n    else update({ ...character, info: { ...character.info, proSkills: [...arr.slice(0, i), ...arr.slice(i + 1)] } });\n  }\n\n  useEffect(() => {\n    const lowerQuery = query.toLowerCase();\n    const list = !query ? skillsArray\n      : skillsArray.filter(({ label }) => label.toLowerCase().indexOf(lowerQuery) === 0);\n    setDisplay(list);\n  }, [query]);\n  return (\n    <Card>\n      <HeaderBar>\n        <h2>Skills</h2>\n        <Spacer />\n        <ActionBar style={{ marginBottom: '0.3125em' }}>\n          <TextField label=\"Search\" value={query} onChange={e => setQuery(e.target.value)} />\n        </ActionBar>\n      </HeaderBar>\n      { !editing\n        ? skillDisplay.map((skill) => {\n          const proSkill = proCheck(character.info.proSkills, skill.label);\n          return ( // DISPLAY SKILLS\n            <div key={skill.label}>\n              <Row>\n                <i className=\"material-icons\">{ proSkill ? 'radio_button_checked' : 'radio_button_unchecked' }</i>\n                <p style={{ margin: '0.3125em' }}>{ skill.label }</p>\n                <Spacer />\n                <h4 style={{ margin: '0.3125em' }}>\n                  { calculateModifier(\n                    character.info.stats[skill.check],\n                    proSkill ? character.level.proBonus : 0,\n                  ) }\n                </h4>\n              </Row>\n              <Divider />\n            </div>\n          );\n        })\n        : skillDisplay.map(({ label }) => ( // EDIT SKILLS\n          <FormControlLabel\n            key={label}\n            control={\n              <Checkbox\n                checked={(character.info.proSkills && character.info.proSkills.indexOf(label) !== -1) || false}\n                value={label}\n                onChange={toggleSKill}\n                color=\"primary\"\n              />\n            }\n            label={label}\n          />\n        ))\n      }\n    </Card>\n  );\n};\n\nexport default Skills;\n\nSkills.propTypes = {\n  character: PropTypes.shape({\n    name: PropTypes.string,\n    race: PropTypes.string,\n    class: PropTypes.string,\n  }).isRequired,\n  editing: PropTypes.bool.isRequired,\n  update: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  IconButton, TextField, FormControl, InputLabel, FormLabel, Select, OutlinedInput, MenuItem, Button,\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport {\n  Card, HeaderBar, ActionBar, Row, Spacer, Column, BasicBox,\n} from './CustomStyled';\nimport {\n  dexAttack, calculateModifier, isProWeapon, isRangeWeapon,\n} from '../services/helper';\nimport dungeonService from '../services/dungeonService';\n\n\nconst Weapons = ({\n  proWeapons, weaponList, weaponIDs, dex, str, proBonus, update, disabled,\n}) => {\n  const [isEditing, setEditing] = useState(false);\n  const [isAdding, setAdding] = useState(false);\n  const [ownedWeapons, setOwnedWeapons] = useState(weaponList);\n  const [isAddingUnique, setAddingUnique] = useState(false);\n  const [weaponOptions, setWeaponOptions] = useState([]);\n  const [selectedWeapon, setWeaponSelect] = useState({});\n  const [weaponCategories, setWeaponCategories] = useState([]);\n  const [damageTypes, setDamageTypes] = useState([]);\n  const [uniqueWeapon, setUniqueWeapon] = useState({\n    name: '',\n    category: '',\n    damage_dice: '',\n    damage_type: '',\n    properties: [],\n  });\n\n  async function loadWeaponOptions() {\n    const weapons = await dungeonService.getWeapons();\n    const uniqueCategories = new Set();\n    const uniqueDamageTypes = new Set();\n    weapons.forEach((weapon) => {\n      uniqueCategories.add(weapon.weapon.category);\n      uniqueDamageTypes.add(weapon.weapon.damageType.trim());\n    });\n    setWeaponCategories([...uniqueCategories]);\n    setDamageTypes([...uniqueDamageTypes]);\n    setWeaponOptions(weapons);\n  }\n\n  function onWeaponChange(e) {\n    const weapon = weaponOptions.find(w => w.name === e.target.value);\n    setWeaponSelect(weapon);\n  }\n\n  function addWeapon() {\n    update([...weaponIDs, +selectedWeapon.id]);\n    setAdding(false);\n    // updates owned weapons list to avoid multiple calls and unnecessary updates of parent object\n    setOwnedWeapons([...ownedWeapons, selectedWeapon]);\n    setWeaponSelect({});\n  }\n\n  function remove(id) {\n    // updates owned weapons list to avoid multiple calls and unnecessary updates of parent object\n    const removedWeaponList = ownedWeapons.filter(weapon => weapon.id !== `${id}`);\n    setOwnedWeapons(removedWeaponList);\n    const index = weaponIDs.indexOf(id);\n    update([...weaponIDs.slice(0, index), ...weaponIDs.slice(index + 1)]);\n  }\n\n  function handleUniqueSelect(event) {\n    setUniqueWeapon(oldWeapon => ({\n      ...oldWeapon,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  function handleValueChange(field) {\n    return (e) => {\n      const weapon = uniqueWeapon;\n      // TODO: splice based on commas to put into a list\n      if (field === 'properties') {\n        weapon[field] = [e.target.value];\n      } else {\n        weapon[field] = e.target.value;\n      }\n      setUniqueWeapon(weapon);\n    };\n  }\n\n  function submitUniqueWeapon() {\n    update([...weaponList, uniqueWeapon]);\n    setAddingUnique(false);\n    setAdding(false);\n    setUniqueWeapon({});\n  }\n\n  useEffect(() => {\n    if (isAdding && !weaponOptions.length) loadWeaponOptions();\n  }, [isAdding, weaponOptions.length]);\n  return (\n    <Card>\n      <HeaderBar>\n        <h2>Weapons</h2>\n        <Spacer />\n        { !disabled\n          && <ActionBar>\n            <IconButton onClick={() => { setAdding(!isAdding); setAddingUnique(false); }}>\n              <i className=\"material-icons\">{ isAdding ? 'close' : 'add' }</i>\n            </IconButton>\n            <IconButton onClick={() => setEditing(!isEditing)}>\n              <i className=\"material-icons\">{ isEditing ? 'check' : 'edit' }</i>\n            </IconButton>\n             </ActionBar>\n        }\n      </HeaderBar>\n      { // ADD NEW WEAPON\n        isAdding && !isAddingUnique\n        && <Row>\n          <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\n            <FormLabel htmlFor=\"class\">Weapon Select</FormLabel>\n            <Select\n              value={selectedWeapon.name || ''}\n              onChange={onWeaponChange}\n              input={<OutlinedInput id=\"weapon\" />}\n            >\n              {\n                weaponOptions.map(val => <MenuItem key={val.name} value={val.name}>{ val.name }</MenuItem>)\n              }\n            </Select>\n          </FormControl>\n          <Spacer />\n          <IconButton onClick={addWeapon}>\n            <i className=\"material-icons\">done</i>\n          </IconButton>\n          <Row>\n            <h2>Can't find your weapon?</h2>\n            {/* <Button variant=\"contained\" color=\"primary\" onClick={() => setAddingUnique(true)}>Add Unique Weapon</Button> */}\n          </Row>\n           </Row>\n      }\n      {\n        isAddingUnique\n        && <>\n          <Row>\n            <h3>Add Unique Weapon</h3>\n            <Spacer />\n          </Row>\n          <Row>\n            <InputContainer>\n              <InputLabel htmlFor=\"unique-category\">Name</InputLabel>\n              <TextField\n                style={{ width: '7rem' }}\n                variant=\"outlined\"\n                onChange={handleValueChange('name')}\n              />\n            </InputContainer>\n            <InputContainer>\n              <InputLabel htmlFor=\"unique-category\">Category</InputLabel>\n              <Select\n                style={{ width: '7rem' }}\n                variant=\"outlined\"\n                inputProps={{\n                  name: 'category',\n                  id: 'unique-category',\n                }}\n                input={<OutlinedInput id=\"weapon\" />}\n                value={uniqueWeapon.category}\n                onChange={handleUniqueSelect}\n              >\n                {\n                  weaponCategories.map(category => <MenuItem key={category} value={category}>{ category }</MenuItem>)\n                }\n              </Select>\n            </InputContainer>\n            <InputContainer>\n              <InputLabel htmlFor=\"unique-category\">Damage Dice</InputLabel>\n              <TextField\n                style={{ width: '7rem' }}\n                variant=\"outlined\"\n                placeholder=\"1d4\"\n                onChange={handleValueChange('damage_dice')}\n              />\n            </InputContainer>\n          </Row>\n          <Row>\n            <InputContainer>\n              <InputLabel htmlFor=\"unique-damage-type\">Damage Type</InputLabel>\n              <Select\n                style={{ width: '7rem' }}\n                variant=\"outlined\"\n                inputProps={{\n                  name: 'damage_type',\n                  id: 'unique-damage-type',\n                }}\n                input={<OutlinedInput id=\"weapon\" />}\n                value={uniqueWeapon.damage_type}\n                onChange={handleUniqueSelect}\n              >\n                {\n                  damageTypes.map(damageType => <MenuItem key={damageType} value={damageType}>{ damageType }</MenuItem>)\n                }\n              </Select>\n            </InputContainer>\n            <InputContainer>\n              <InputLabel htmlFor=\"unique-category\">Weight</InputLabel>\n              <TextField\n                style={{ width: '7rem' }}\n                variant=\"outlined\"\n                onChange={handleValueChange('weight')}\n              />\n            </InputContainer>\n            <InputContainer>\n              <InputLabel htmlFor=\"unique-category\">Properties</InputLabel>\n              <TextField\n                style={{ width: '7rem' }}\n                variant=\"outlined\"\n                onChange={handleValueChange('properties')}\n              />\n            </InputContainer>\n          </Row>\n          <Row>\n            <Button variant=\"contained\" color=\"primary\" className=\"submit-button\" onClick={submitUniqueWeapon}>\n              Submit Weapon\n            </Button>\n          </Row>\n           </>\n      }\n      { // DISPLAY ALL WEAPONS\n        ownedWeapons.map((weapon, i) => {\n          const dexCheck = dexAttack(weapon);\n          const proMod = isProWeapon(weapon, proWeapons) ? proBonus : 0;\n          const atkMod = dexCheck ? calculateModifier(dex, proMod) : calculateModifier(str, proMod);\n          const rangeAtk = isRangeWeapon(weapon) ? calculateModifier(dex, proMod) : 0;\n          const dmgMod = dexCheck ? calculateModifier(dex) : calculateModifier(str);\n          const rangeDmg = isRangeWeapon(weapon) ? calculateModifier(dex) : 0;\n\n          return (\n            <Row key={`${weapon.name}`}>\n              { isEditing\n                && <IconButton color=\"secondary\" onClick={() => remove(+weapon.id)}>\n                  <i className=\"material-icons\">delete</i>\n                   </IconButton>\n              }\n              <Column>\n                <h3 className=\"min-margin\">{ weapon.name }</h3>\n                <p className=\"min-margin\">{ weapon.weapon.damageType }</p>\n              </Column>\n              <Spacer />\n              <BasicBox>\n                <TextField\n                  variant=\"outlined\"\n                  disabled\n                  label=\"Attack\"\n                  value={atkMod}\n                  helperText={!dexCheck && rangeAtk ? `thrown: ${rangeAtk}` : ''}\n                />\n              </BasicBox>\n              <BasicBox>\n                <TextField\n                  variant=\"outlined\"\n                  disabled\n                  label=\"Damage\"\n                  value={`${weapon.weapon.damage} ${dmgMod}`}\n                  helperText={!dexCheck && rangeDmg ? `thrown: ${rangeDmg}` : ''}\n                />\n              </BasicBox>\n            </Row>\n          );\n        })\n      }\n    </Card>\n  );\n};\n\nexport default Weapons;\n\nconst InputContainer = styled.div`\n  margin: 0.5rem;\n`;\n\nWeapons.propTypes = {\n  dex: PropTypes.number.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  proBonus: PropTypes.number.isRequired,\n  proWeapons: PropTypes.array.isRequired,\n  str: PropTypes.number.isRequired,\n  update: PropTypes.func.isRequired,\n  weaponIDs: PropTypes.array.isRequired,\n  weaponList: PropTypes.array.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  IconButton, TextField, Divider,\n} from '@material-ui/core';\nimport {\n  Card, HeaderBar, ActionBar, Row, Spacer, Column, BasicBox,\n} from './CustomStyled';\n\nconst Inventory = ({\n  itemList, gold, update, disabled,\n}) => {\n  const [isAdding, setAdding] = useState(false);\n  const [isEditing, setEditing] = useState(false);\n  const [itemValues, setItemValues] = useState({});\n  const [goldValue, setGold] = useState(gold);\n  const [showDesc, setDescVisible] = useState(itemList.map(() => false));\n\n  function handleChange(field, numeric) {\n    return (e) => {\n      setItemValues({ ...itemValues, [field]: numeric ? +e.target.value : e.target.value });\n    };\n  }\n\n  function addItem() {\n    if (!itemValues.qty) itemValues.qty = 1;\n    update(goldValue, [...itemList, itemValues]);\n    setAdding(false);\n    setItemValues({});\n  }\n\n  function changeGold(e) {\n    const newGold = +e.target.value;\n    update(newGold, itemList);\n    setGold(newGold);\n  }\n\n  function remove(i) {\n    update(goldValue, [...itemList.slice(0, i), ...itemList.slice(i + 1)]);\n  }\n\n  function toggleDesc(i) {\n    setDescVisible([...showDesc.slice(0, i), !showDesc[i], ...showDesc.slice(i + 1)]);\n  }\n\n  function updateQty(i) {\n    const item = itemList[i];\n    return (e) => {\n      const qty = +e.target.value;\n      update(\n        goldValue,\n        [...itemList.slice(0, i), { ...item, qty }, ...itemList.slice(i + 1)],\n      );\n    };\n  }\n\n  useEffect(() => setGold(gold), [gold]);\n\n  return (\n    <Card>\n      <HeaderBar>\n        <h2>Inventory</h2>\n        <Spacer />\n        { !disabled\n          && <ActionBar>\n            <IconButton onClick={() => setAdding(!isAdding)}>\n              <i className=\"material-icons\">{ isAdding ? 'close' : 'add' }</i>\n            </IconButton>\n            <IconButton onClick={() => {\n              setEditing(!isEditing);\n              setItemValues({});\n            }\n              }\n            >\n              <i className=\"material-icons\">{ isEditing ? 'check' : 'edit' }</i>\n            </IconButton>\n             </ActionBar>\n        }\n      </HeaderBar>\n      { // ADD NEW ITEM\n        isAdding\n        && <Column>\n          <Row>\n            <TextField\n              style={{ maxWidth: 100 }}\n              variant=\"outlined\"\n              type=\"number\"\n              label=\"Value (gp)\"\n              value={itemValues.goldCost || ''}\n              onChange={handleChange('goldCost', true)}\n            />\n            <TextField\n              style={{ maxWidth: 150 }}\n              variant=\"outlined\"\n              label=\"Name\"\n              value={itemValues.name || ''}\n              onChange={handleChange('name')}\n            />\n            <TextField\n              style={{ maxWidth: 100 }}\n              variant=\"outlined\"\n              type=\"number\"\n              label=\"Qty\"\n              value={itemValues.qty || ''}\n              onChange={handleChange('qty', true)}\n            />\n            <Spacer />\n            <IconButton onClick={addItem}>\n              <i className=\"material-icons\">done</i>\n            </IconButton>\n          </Row>\n          <TextField\n            variant=\"outlined\"\n            label=\"Description (optional)\"\n            value={itemValues.description || ''}\n            onChange={handleChange('description')}\n          />\n           </Column>\n      }\n\n      <Row style={{ justifyContent: 'flex-end' }}>\n        <TextField\n          disabled={disabled}\n          style={{ maxWidth: 150 }}\n          variant=\"outlined\"\n          type=\"number\"\n          label=\"Gold Pieces\"\n          value={gold || 0}\n          onChange={changeGold}\n        />\n      </Row>\n\n      { // DISPLAY ALL ITEMS\n        itemList.map((item, i) => (\n          <Column key={`${item.name}`}>\n            {console.log(item)}\n            <Row style={{ alignItems: 'center' }}>\n              { isEditing\n                && <IconButton color=\"secondary\" onClick={() => remove(i)}>\n                  <i className=\"material-icons\">delete</i>\n                   </IconButton>\n              }\n              <h4 className=\"min-margin\">{ item.name }</h4>\n              {\n                (item.description || !!item.goldCost)\n                && <IconButton onClick={() => toggleDesc(i)}>\n                  <i className=\"material-icons\">{ showDesc[i] ? 'cancel' : 'info' }</i>\n                   </IconButton>\n              }\n              <Spacer />\n              <BasicBox>\n                <TextField\n                  variant=\"outlined\"\n                  type=\"number\"\n                  disabled={disabled}\n                  label=\"Qty\"\n                  value={item.qty}\n                  onChange={updateQty(i)}\n                />\n              </BasicBox>\n            </Row>\n            { showDesc[i]\n              && <p className=\"min-margin\">\n                { item.description ? item.description : null }\n                { !item.goldCost ? null : `(${item.goldCost} gp)` }\n                 </p>\n            }\n            <Divider />\n          </Column>\n        ))\n      }\n    </Card>\n  );\n};\n\nexport default Inventory;\n\nInventory.propTypes = {\n  itemList: PropTypes.array.isRequired,\n  gold: PropTypes.number.isRequired,\n  update: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@material-ui/core';\nimport {\n  Column, Row,\n} from './CustomStyled';\n\nconst SpellDetail = ({ spell }) => (\n  <Column>\n    <Row>\n      <Chip\n        icon={ <i className=\"material-icons\">school</i> }\n        label={ spell.school }\n        variant=\"outlined\"\n      />\n      <Chip\n        icon={ <i className=\"material-icons\">timer</i> }\n        label={ spell.casting_time }\n        variant=\"outlined\"\n      />\n      <Chip\n        icon={ <i className=\"material-icons\">timelapse</i> }\n        label={ spell.duration }\n        variant=\"outlined\"\n      />\n      <Chip\n        icon={ <i className=\"material-icons\">wifi_tethering</i> }\n        label={ spell.range }\n        variant=\"outlined\"\n      />\n    </Row>\n    <p className=\"min-margin\">{ spell.desc }</p>\n  </Column>\n);\n\nexport default SpellDetail;\n\nSpellDetail.propTypes = {\n  spell: PropTypes.shape({\n    name: PropTypes.string,\n    desc: PropTypes.string,\n    school: PropTypes.string,\n    duration: PropTypes.string,\n    casting_time: PropTypes.string,\n    range: PropTypes.string,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Checkbox, Button, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, ExpansionPanelActions,\n} from '@material-ui/core';\nimport {\n  Card, HeaderBar, Spacer, ActionBar, Column,\n} from './CustomStyled';\nimport dungeonService from '../services/dungeonService';\nimport SpellDetail from './SpellDetail';\n\nconst SpellPage = ({\n  level, ability, spells, slots, addSpell, forgetSpell, mod,\n}) => {\n  const [spellList, setSpellList] = useState([]);\n  const [openSlots, setOpenSlots] = useState([]);\n  const [spellSearchResult, setSearchResults] = useState([]);\n  const [showResults, setShow] = useState(false);\n\n  async function getNewSpells() {\n    const results = await dungeonService.getSpellsForLevel(level);\n    setSearchResults(results.filter(spell => !spellList.find(known => known.slug === spell.slug)));\n  }\n\n  function loadSpellSearch() {\n    if (!spellSearchResult.length) getNewSpells();\n    setShow(true);\n  }\n\n  useEffect(() => {\n    setSpellList(\n      spells\n        .filter(spell => (spell.level === 'Cantrip' && level === 'Cantrip') || spell.level === `${ level }-level`),\n    );\n  }, [spells, level]);\n\n  useEffect(() => {\n    let slotArr = localStorage.getItem(level);\n    slotArr = !slotArr || slotArr.length !== slots ? [] : JSON.parse(slotArr);\n    if (!slotArr.length) {\n      for (let i = 0; i < slots; i++) {\n        slotArr.push(false);\n      }\n    }\n    setOpenSlots(slotArr);\n  }, [slots, level]);\n\n  useEffect(() => {\n    localStorage.setItem(level, JSON.stringify(openSlots));\n  }, [openSlots, level]);\n\n  const spellLookupButton = !showResults\n    ? <Button color=\"secondary\" onClick={ loadSpellSearch }>See Library</Button>\n    : <Button onClick={ () => setShow(false) }>Close</Button>;\n\n  return (\n    <Card>\n      <HeaderBar>\n        <Column>\n          <h2>{ level } Level Spells</h2>\n          <p><b>{ ability.slice(0, 3) }. Mod:</b> { mod } | <b>DC:</b> { 8 + +mod }</p>\n        </Column>\n        <Spacer />\n        <ActionBar>\n          { openSlots.map((val, i) => (\n            <Checkbox\n              key={ `${ level }-slot-${ i }` }\n              checked={ val }\n              value={ i }\n              onChange={ () => setOpenSlots([...openSlots.slice(0, i), !val, ...openSlots.slice(i + 1)]) }\n            />\n          ))\n          }\n        </ActionBar>\n      </HeaderBar>\n\n      {/* KNOWN SPELLS */ }\n      { spellList.map((spell, i) =>\n        <ExpansionPanel key={ spell.name }>\n          <ExpansionPanelSummary>{ spell.name }</ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <SpellDetail spell={ spell } />\n          </ExpansionPanelDetails>\n          { forgetSpell &&\n            <ExpansionPanelActions>\n              <Button onClick={ () => forgetSpell(spell) }\n                variant=\"contained\"\n                color=\"secondary\">Forget</Button>\n            </ExpansionPanelActions>\n          }\n        </ExpansionPanel>\n      )\n      }\n\n      {/* NEW SPELL LOOKUP */ }\n      { showResults &&\n        <>\n          <HeaderBar>\n            <h2>New Spells</h2>\n          </HeaderBar>\n          {\n            spellSearchResult.map(spell =>\n              <ExpansionPanel key={ spell.name }>\n                <ExpansionPanelSummary>{ spell.name }</ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  <SpellDetail spell={ spell } />\n                </ExpansionPanelDetails>\n                <ExpansionPanelActions>\n                  <Button variant=\"contained\" color=\"secondary\" onClick={ () => addSpell(spell) }>\n                    Learn\n                  </Button>\n                </ExpansionPanelActions>\n              </ExpansionPanel>\n            )\n          }\n        </>\n      }\n      { addSpell && spellLookupButton }\n    </Card >\n  );\n};\n\nexport default SpellPage;\n\nSpellPage.propTypes = {\n  level: PropTypes.string.isRequired,\n  ability: PropTypes.string.isRequired,\n  spells: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    desc: PropTypes.string,\n    level: PropTypes.string,\n    casting_time: PropTypes.string,\n  })).isRequired,\n  slots: PropTypes.number.isRequired,\n  addSpell: PropTypes.func,\n  forgetSpell: PropTypes.func,\n  mod: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport SpellPage from '../components/SpellPage';\nimport dungeonService from '../services/dungeonService';\n\nconst SpellBook = ({\n  spells, classInfo, level, mod, update, disabled\n}) => {\n\n  const [spellDetails, setSpellDetails] = useState([]);\n\n  function addSpell(spell) {\n    update([...spells, spell.slug]);\n  }\n\n  function removeSpell(spell) {\n    const i = spells.findIndex(s => s === spell.slug)\n    update([...spells.slice(0, i), ...spells.slice(i + 1)]);\n  }\n\n  const cantrips = (\n    <SpellPage\n      level=\"Cantrip\"\n      ability={ classInfo.spellcasting_ability }\n      slots={ 0 }\n      spells={ spellDetails || [] }\n      addSpell={ disabled ? null : addSpell }\n      forgetSpell={ disabled ? null : removeSpell }\n      mod={ mod }\n    />);\n\n  const spellContainers = classInfo.info.Level.map((val, i) => {\n    if (i > level - 1 || !classInfo.info[val][level - 1]) return null;\n    return (\n      <SpellPage\n        key={ `${ val }-level-spells` }\n        level={ val }\n        ability={ classInfo.spellcasting_ability }\n        slots={ +classInfo.info[val][level - 1] }\n        spells={ spellDetails || [] }\n        addSpell={ disabled ? null : addSpell }\n        forgetSpell={ disabled ? null : removeSpell }\n        mod={ mod }\n      />\n    );\n  });\n\n  async function loadSpells(slugs) {\n    const result = await dungeonService.getSpells(slugs);\n\n    setSpellDetails(result);\n  }\n\n  useEffect(() => {\n    loadSpells(spells);\n  }, [spells]);\n\n  return (\n    <>\n      { cantrips }\n      { spellContainers }\n    </>\n  );\n};\n\nexport default SpellBook;\n\nSpellBook.propTypes = {\n  spells: PropTypes.arrayOf(PropTypes.string).isRequired,\n  classInfo: PropTypes.shape({\n    spellcasting_ability: PropTypes.string,\n    info: PropTypes.shape({\n      '1st': PropTypes.arrayOf(PropTypes.string),\n      '2nd': PropTypes.arrayOf(PropTypes.string),\n      '3rd': PropTypes.arrayOf(PropTypes.string),\n      '4th': PropTypes.arrayOf(PropTypes.string),\n      '5th': PropTypes.arrayOf(PropTypes.string),\n      '6th': PropTypes.arrayOf(PropTypes.string),\n      '7th': PropTypes.arrayOf(PropTypes.string),\n      '8th': PropTypes.arrayOf(PropTypes.string),\n      '9th': PropTypes.arrayOf(PropTypes.string),\n      'Cantrips Known': PropTypes.arrayOf(PropTypes.string),\n      Level: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }).isRequired,\n  level: PropTypes.number.isRequired,\n  mod: PropTypes.string.isRequired,\n  update: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, TextField, IconButton } from '@material-ui/core';\nimport {\n  Card, Row, HeaderBar,\n} from './CustomStyled';\n\nconst CharacterAdmin = ({ character, update }) => {\n  const [values, setValues] = useState({});\n\n  function onChange(field) {\n    return e => setValues({ ...values, [field]: e.target.value });\n  }\n\n  function add(field, valueField) {\n    return () => {\n      const array = character.info[field] || [];\n      update({ ...character, info: { ...character.info, [field]: [...array, values[valueField]] } });\n      setValues({ ...values, [valueField]: '' });\n    };\n  }\n\n  function remove(field, i) {\n    return () => {\n      const array = [\n        ...character.info[field].slice(0, i),\n        ...character.info[field].slice(i + 1),\n      ];\n      update({ ...character, info: { ...character.info, [field]: array } });\n    };\n  }\n\n  return (\n    <Card>\n      <HeaderBar style={{ marginTop: '2.5rem' }}>\n        <h2>Authorized Users</h2>\n      </HeaderBar>\n      <Row>\n        {character.info.authUsers\n          && character.info.authUsers.map((user, i) => (\n            <Chip\n              key={`user-${user}`}\n              label={user}\n              onDelete={remove('authUsers', i)}\n              color=\"primary\"\n            />\n          ))}\n        <TextField\n          label=\"New Email\"\n          value={values.authEmail || ''}\n          onChange={onChange('authEmail')}\n        />\n        <IconButton color=\"primary\" onClick={add('authUsers', 'authEmail')}>\n          <i className=\"material-icons\">done</i>\n        </IconButton>\n      </Row>\n    </Card>\n  );\n};\n\nexport default CharacterAdmin;\n\nCharacterAdmin.propTypes = {\n  character: PropTypes.shape({\n    authUsers: PropTypes.arrayOf(PropTypes.string),\n    visibileTo: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  update: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green, red } from '@material-ui/core/colors';\nimport styled from 'styled-components';\nimport { Row, Card } from './CustomStyled';\n\nconst DeathSavingThrows = ({ id }) => {\n  const [checked, setChecked] = useState({\n    success1: false,\n    success2: false,\n    success3: false,\n    failure1: false,\n    failure2: false,\n    failure3: false,\n  });\n\n  useEffect(() => {\n    // CHECK LOCAL STORAGE FOR SAVE DATA\n    let data = localStorage.getItem(`deathsaves_${id}`);\n    if (!data) return;\n    data = JSON.parse(data);\n    setChecked(data);\n  }, [id]);\n\n  const handleChange = (event) => {\n    const updatedChecks = { ...checked, [event.target.name]: event.target.checked };\n    // UPDATE LOCAL STORAGE\n    localStorage.setItem(`deathsaves_${id}`, JSON.stringify(updatedChecks));\n    setChecked(updatedChecks);\n  };\n\n  return (\n    <Card>\n      <SavingThrowsContainer>\n        <h2 style={{ margin: 0 }}>Death Saving Throws</h2>\n        <Row>\n          <h3 style={{ margin: 0 }}>Success</h3>\n          <GreenCheckbox\n            checked={checked.success1}\n            onChange={handleChange}\n            name=\"success1\"\n            value=\"primary\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n          <GreenCheckbox\n            checked={checked.success2}\n            onChange={handleChange}\n            name=\"success2\"\n            value=\"primary\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n          <GreenCheckbox\n            checked={checked.success3}\n            onChange={handleChange}\n            name=\"success3\"\n            value=\"primary\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n        </Row>\n        <Row>\n          <h3 style={{ margin: 0 }}>Failure</h3>\n          <RedCheckbox\n            checked={checked.failure1}\n            onChange={handleChange}\n            name=\"failure1\"\n            value=\"primary\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n          <RedCheckbox\n            checked={checked.failure2}\n            onChange={handleChange}\n            name=\"failure2\"\n            value=\"primary\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n          <RedCheckbox\n            checked={checked.failure3}\n            onChange={handleChange}\n            name=\"failure3\"\n            value=\"primary\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n        </Row>\n      </SavingThrowsContainer>\n    </Card>\n  );\n};\n\nexport default DeathSavingThrows;\n\nconst SavingThrowsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  font-size: .8em;\n  justify-content: space-between;\n`;\n\nconst GreenCheckbox = withStyles({\n  root: {\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst RedCheckbox = withStyles({\n  root: {\n    '&$checked': {\n      color: red[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Fab } from '@material-ui/core';\nimport Profile from '../components/Profile';\nimport Stats from '../components/Stats';\nimport Skills from '../components/Skills';\nimport { TopAnchor } from '../components/CustomStyled';\nimport dungeonService from '../services/dungeonService';\nimport Weapons from '../components/Weapons';\nimport Inventory from '../components/Inventory';\nimport SpellBook from './SpellBook';\nimport { same, calculateModifier } from '../services/helper';\nimport CharacterAdmin from '../components/CharacterAdmin';\n// import Feats from '../components/Feats';\nimport DeathSavingThrows from '../components/DeathSavingThrows';\n\nconst CharacterSheet = ({ characterData }) => {\n  const [characterBase, updateCharacterBase] = useState(characterData);\n  const [character, updateCharacter] = useState(characterData);\n  const [isDirty, setDirty] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [authorized, setAuthorized] = useState(false);\n  const [classInfo, setClassInfo] = useState({});\n  // const [raceInfo, setRaceInfo] = useState({});\n  const { stats } = character.info;\n  function update(charUpdates) {\n    setDirty(!same(characterBase, charUpdates));\n    updateCharacter(charUpdates);\n  }\n\n  async function save() {\n    setDirty(false);\n    setEditMode(false);\n    const success = await dungeonService.saveCharacter(character);\n    if (!success) setDirty(true);\n    else updateCharacterBase(character);\n  }\n\n  function cancel() {\n    setDirty(false);\n    setEditMode(false);\n    updateCharacter(characterBase);\n  }\n\n  async function getClassInfo(className) {\n    if (!className) return;\n    const result = await dungeonService.getClass(className);\n    setClassInfo(result);\n  }\n\n  // async function getRaceInfo(race) {\n  //   if (!race) return;\n  //   const result = await dungeonService.getRace(race.id);\n  //   setRaceInfo(result);\n  // }\n\n  useEffect(() => {\n    updateCharacter(characterData);\n    setAuthorized(characterData.authorized);\n    getClassInfo(characterData.class.id);\n    // getRaceInfo(characterData.race);\n    setEditMode(false);\n  }, [characterData]);\n  console.log(character);\n  return (\n    <SheetContainer>\n      { authorized && !editMode && (\n        <TopAnchor>\n          { !isDirty ? (\n            <Fab\n              color=\"secondary\"\n              size=\"small\"\n              onClick={() => setEditMode(true)}\n            >\n              <i className=\"material-icons\">edit</i>\n            </Fab>\n          ) : (\n              <SaveBar>\n                <Fab color=\"secondary\" size=\"small\" style={{ marginRight: '1rem' }} onClick={cancel}>\n                  <i className=\"material-icons\">clear</i>\n                </Fab>\n                <Fab color=\"secondary\" size=\"small\" onClick={save}>\n                  <i className=\"material-icons\">save</i>\n                </Fab>\n              </SaveBar>\n          ) }\n        </TopAnchor>\n      ) }\n      { editMode && (\n        <>\n          <SaveBar>\n            <Fab color=\"secondary\" size=\"small\" style={{ marginRight: '1rem' }} onClick={cancel}>\n              <i className=\"material-icons\">clear</i>\n            </Fab>\n            <div />\n            <Fab color=\"secondary\" size=\"small\" onClick={save}>\n              <i className=\"material-icons\">save</i>\n            </Fab>\n          </SaveBar>\n          <Admin>\n            <CharacterAdmin character={character} update={update} />\n          </Admin>\n        </>\n      ) }\n      <ProfileArea>\n        <Profile\n          character={character}\n          hitDice={classInfo.hitDice || ''}\n          update={update}\n          disabled={!authorized}\n          editing={editMode}\n        />\n        { character.hp <= 0\n          ? <DeathSavingThrows id={character.id} />\n          // Switching to removeItem, clear was clearing the entire storage\n          : localStorage.removeItem(`deathsaves_${character.id}`)\n        }\n      </ProfileArea>\n      <StatsArea>\n        <Stats\n          character={character}\n          saves={classInfo.prof_saving_throws || ''}\n          update={update}\n          disabled={!authorized || !editMode}\n        />\n      </StatsArea>\n      <SkillsArea>\n        <Skills character={character} editing={editMode} update={update} />\n      </SkillsArea>\n      <WeaponsArea>\n        <Weapons\n          disabled={!authorized}\n          proWeapons={classInfo.proWeapon || ''}\n          weaponList={character.weapons || []}\n          weaponIDs={character.info.weaponIDs}\n          dex={stats.dex}\n          str={stats.str}\n          proBonus={character.level.proBonus}\n          update={weaponIDs => update({ ...character, info: { ...character.info, weaponIDs } })}\n        />\n      </WeaponsArea>\n      <EquipmentArea>\n        <Inventory\n          disabled={!authorized}\n          itemList={character.inventory || []}\n          gold={character.info.gold}\n          update={(gold, inventory) =>\n            update({ ...character, info: { ...character.info, gold }, inventory })\n          }\n        />\n      </EquipmentArea>\n      <Misc>\n\n        {/* <Feats\n          disabled={!authorized}\n          traits={raceInfo.traits || []}\n          feats={character.features || []}\n          // featIDs={character.features || []}\n          update={feats => update({ ...character, feats })}\n        /> */}\n        { classInfo && classInfo.spellcasting_ability && (\n          <SpellBook\n            disabled={!authorized}\n            classInfo={classInfo}\n            level={character.level}\n            spells={character.spells || []}\n            update={spells => update({ ...character, spells })}\n            mod={calculateModifier(\n              character[\n                classInfo.spellcasting_ability.toLowerCase().substring(0, 3)\n              ], character.proBonus,\n            )}\n          />\n        ) }\n      </Misc>\n    </SheetContainer>\n  );\n};\n\nexport default CharacterSheet;\n\nCharacterSheet.propTypes = {\n  characterData: PropTypes.shape({\n    name: PropTypes.string,\n    race: PropTypes.string,\n    class: PropTypes.string,\n  }).isRequired,\n};\n\nconst SheetContainer = styled.div`\n    position: relative;\n    display: grid;\n    grid-gap: 0.625em;\n    grid-template-columns: 18.75em minmax(auto, 15.625em) minmax(auto, 12.5em);\n    grid-template-areas:\n      \"admin admin admin\"\n      \"pro pro pro\"\n      \"skill stat stat\"\n      \"skill wpn wpn\"\n      \"skill eqp eqp\"\n      \"etc etc etc\";\n  \n  @media screen and (max-width: 36em) {\n        display: flex;\n      flex-direction: column;\n    }\n  `;\n\nconst Admin = styled.div`\n    border-top:'1rem';\n    grid-area: admin;\n    display: flex;\n    flex-direction: column;\n  `;\n\nconst SaveBar = styled.div`\n  position:fixed;\n  display:flex;\n  flex-direction: row;\n  z-index:1;\n  `;\nconst ProfileArea = styled.div`\n    grid-area: pro;\n  `;\nconst StatsArea = styled.div`\n    grid-area: stat;\n  `;\nconst SkillsArea = styled.div`\n    grid-area: skill;\n  `;\nconst WeaponsArea = styled.div`\n    grid-area: wpn;\n  `;\nconst EquipmentArea = styled.div`\n    grid-area: eqp;\n  `;\nconst Misc = styled.div`\n    grid-area: etc;\n    display: flex;\n    flex-direction: column;\n  `;\n","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Fab, Button, TextField, Card, CircularProgress, IconButton,\n} from '@material-ui/core';\nimport DungeonService from '../services/dungeonService';\nimport {\n  SideBar,\n  SideBarToggle,\n  ContentWithSideBar,\n  RowCenter,\n  Row,\n  ProgressContainer,\n  Spacer,\n} from '../components/CustomStyled';\nimport CharacterSummary from '../components/CharacterSummary';\nimport CharacterSheet from './CharacterSheet';\n\nfunction PartyView({ location }) {\n  const [sidebar, setSidebar] = useState(false);\n  const [idList, setIDList] = useState([]);\n  const [characters, setCharacters] = useState([]);\n  const [focus, setFocus] = useState(null);\n  const [partyName, setPartyName] = useState(''); // Controls the Naming of a new Party\n  const [existingParty, setExistingParty] = useState(false); // Toggles form or display of existing\n\n  function clearInitiative() {\n    const { email } = firebase.auth().currentUser;\n    characters\n      .forEach(async (character) => {\n        const { authorized } = await DungeonService.checkUserAuth(character.id, email);\n        if (authorized) DungeonService.saveCharacter({ ...character, initiative: null });\n      });\n  }\n\n  function longRest() {\n    const { email } = firebase.auth().currentUser;\n    characters\n      .forEach(async (character) => {\n        const { authorized } = await DungeonService.checkUserAuth(character.id, email);\n        if (authorized) DungeonService.saveCharacter({ ...character, hp: character.maxHP });\n      });\n  }\n\n  async function saveParty(event) {\n    event.preventDefault();\n    let parties = localStorage.getItem('parties');\n    parties = parties ? JSON.parse(parties) : [];\n    const characterIds = characters.map(character => character.id);\n    const party = {\n      name: partyName,\n      members: characterIds,\n    };\n    parties.push(party);\n    await localStorage.setItem('parties', JSON.stringify(parties));\n    setExistingParty(true);\n  }\n\n  useEffect(() => {\n    const ids = location.search.split('id=')[1].split(',');\n    setIDList(ids);\n    const selected = localStorage.getItem('selected');\n    if (selected) {\n      setPartyName(selected);\n      setExistingParty(true);\n    }\n    async function fetchCharactersByOwner() {\n      const owned = await DungeonService.getCharactersByOwner();\n      setCharacters(owned);\n    }\n    fetchCharactersByOwner();\n    // const socket = DungeonService.watchCharacters(ids);\n    // socket.onmessage = (event) => {\n    //   const updatedCharacters = JSON.parse(event.data).sort((a, b) => {\n    //     if (!a.initiative) {\n    //       if (!b.initiative) return 0;\n    //       return 1;\n    //     }\n    //     if (!b.initiative) return -1;\n    //     return b.initiative - a.initiative;\n    //   });\n    //   setCharacters(updatedCharacters);\n    // };\n\n    // return () => socket.close();\n  }, [location.search]);\n\n  useEffect(() => {\n    const id = !focus ? idList[0] : focus.info.id || idList[0];\n    if (!id || (focus && focus.info.id === id)) return;\n    setFocus(characters.find(c => `${c.info.id}` === id));\n  }, [characters, idList, focus]);\n  if (characters.length === 0 || !focus) {\n    return (\n      <ProgressContainer>\n        <CircularProgress style={{ justifySelf: 'center' }} />\n      </ProgressContainer>\n    );\n  }\n  return (\n    <ContentWithSideBar>\n      <Content>\n        <RowCenter>\n          <CharacterSheet characterData={focus} />\n        </RowCenter>\n        { characters.length > 1 && (\n          <>\n            <SideBar className={sidebar ? 'open' : ''}>\n              <Card style={{ margin: '.25rem', marginTop: '2rem' }}>\n                <PartyActions>\n                {existingParty ? <h2>{partyName}</h2>\n                  : <form>\n                      <Row>\n                          <TextField onChange={(event) => { setPartyName(event.target.value); }} label=\"PartyName\" />\n                          <Spacer />\n                          {partyName.length > 0\n                          && <IconButton onClick={saveParty} color=\"primary\">\n                            <i className=\"material-icons\">save</i>\n                             </IconButton>\n                            }\n                      </Row>\n                    </form>\n                    }\n                    <Row style={{ justifyContent: 'space-between', marginTop: '0.5rem' }}>\n                      <Button variant=\"contained\" color=\"primary\" onClick={longRest}>Long Rest</Button>\n                      <Button variant=\"contained\" color=\"secondary\" onClick={clearInitiative}>Clear Initiative</Button>\n                    </Row>\n                </PartyActions>\n              </Card>\n              <SideContainer>\n                { characters.map(character => (\n                  <CharacterSummary\n                    key={character.info.id}\n                    character={character}\n                    open={() => setFocus(character)}\n                    highlight={focus.info.id === character.info.id}\n                  />\n                )) }\n              </SideContainer>\n            </SideBar>\n            <SideBarToggle>\n              <Fab color=\"secondary\" onClick={() => setSidebar(!sidebar)}>\n                <i className=\"material-icons\">{ sidebar ? 'close' : 'group' }</i>\n              </Fab>\n            </SideBarToggle>\n          </>\n        ) }\n      </Content>\n    </ContentWithSideBar>\n  );\n}\n\nPartyView.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default PartyView;\n\nconst PartyActions = styled.div`\n  margin: 1rem;\n`;\n\nconst SideContainer = styled.div`\n  margin-bottom: 4em;\n`;\n\nconst Content = styled.div`\n  margin-bottom: 4em;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport firebase from \"firebase\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport NavBar from \"./components/NavBar\";\nimport OwnerView from \"./containers/OwnerView\";\nimport PartyView from \"./containers/PartyView\";\nimport fetchIntercept from 'fetch-intercept';\n\nimport \"./App.css\";\n\nfunction App() {\n  const [user, updateUser] = useState();\n\n  async function login() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const { user: info } = await firebase.auth().signInWithPopup(provider);\n    updateUser({ name: info.displayName, email: info.email, photo: info.photoURL });\n  }\n\n  firebase.auth().onAuthStateChanged(async function (info) {\n    let unregister = function () { console.info(\"No interceptor registered.\") };\n    if (info) {\n      const token = await firebase.auth().currentUser.getIdToken(/* forceRefresh */ true);\n      unregister = fetchIntercept.register({\n        request: function (url, config) {\n          config = config || {}\n          config = {\n            ...config, headers: {\n              Authorization: `Bearer ${ token }`\n            }\n          }\n          return [url, config];\n        }\n      });\n\n      if (!user) {\n        updateUser({ name: info.displayName, email: info.email, photo: info.photoURL });\n      }\n    } else {\n      unregister()\n      updateUser(null)\n      login();\n    }\n  });\n\n  return (\n    <Router>\n      <div className='App '>\n        <NavBar user={ user } />\n        { user && (\n          <Content>\n            <Route\n              path='/'\n              exact\n              component={ () => <OwnerView owner={ user.email } /> }\n            />\n            <Route\n              path='/character'\n              exact\n              component={ props => <PartyView { ...props } /> }\n            />\n          </Content>\n        ) }\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\nconst Content = styled.div`\n  display: flex;\n  margin-top: 5em;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as firebase from 'firebase/app';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst firebaseConfig = require('./secret_auth_config.json');\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}